name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: üîß Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: üì¶ Install dependencies
      run: npm ci
      
    - name: üß™ Run tests
      run: npm run test:run
      
    - name: üèóÔ∏è Build for production
      run: npm run build
      
    - name: üì¶ Create distribution package
      run: |
        mkdir -p release
        cp -r dist/* release/
        cp README.md release/
        cp CONTRIBUTING.md release/
        cp LICENSE release/ 2>/dev/null || echo "LICENSE file not found"
        cp package.json release/
        
        # Create archives
        tar -czf fpga-pin-planner-${GITHUB_REF#refs/tags/}.tar.gz -C release .
        cd release && zip -r ../fpga-pin-planner-${GITHUB_REF#refs/tags/}.zip . && cd ..
        
    - name: üìù Generate changelog
      id: changelog
      run: |
        echo "## üéâ FPGA Pin Planner ${GITHUB_REF#refs/tags/}" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### ‚ú® ‰∏ªË¶ÅÊ©üËÉΩ" >> CHANGELOG.md
        echo "- üìä ÈõªÂúß„ÉªI/OË¶èÊ†º„Éó„É´„ÉÄ„Ç¶„É≥ÈÅ∏ÊäûÊ©üËÉΩ" >> CHANGELOG.md
        echo "- üîÑ „Çπ„Éû„Éº„ÉàÈÄ£Êê∫Ê©üËÉΩÔºàÈõªÂúßÂ§âÊõ¥ÊôÇ„ÅÆI/OË¶èÊ†ºËá™ÂãïÊõ¥Êñ∞Ôºâ" >> CHANGELOG.md
        echo "- üì¶ „Éê„ÉÉ„ÉÅÊìç‰ΩúÊ©üËÉΩÔºàÈÖçÂàó„Éë„Çø„Éº„É≥„ÄÅÂ∑ÆÂãï„Éö„Ç¢„ÄÅÈõªÂúß„ÉªI/OË¶èÊ†ºÔºâ" >> CHANGELOG.md
        echo "- üîç È´òÂ∫¶„Å™Ê§úÁ¥¢„Éª„Éï„Ç£„É´„ÇøÊ©üËÉΩ" >> CHANGELOG.md
        echo "- ‚úÖ „É™„Ç¢„É´„Çø„Ç§„É†Ê§úË®ºÊ©üËÉΩ" >> CHANGELOG.md
        echo "- üí¨ „Ç≥„É°„É≥„ÉàÁÆ°ÁêÜÊ©üËÉΩ" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### üõ†Ô∏è ÊäÄË°ì„Çπ„Çø„ÉÉ„ÇØ" >> CHANGELOG.md
        echo "- React 18 + TypeScript 5.0" >> CHANGELOG.md
        echo "- Vite 4.5 + Vitest" >> CHANGELOG.md
        echo "- Zustand + Immer" >> CHANGELOG.md
        echo "- Modern CSS + Custom Components" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### üì• ‰ΩøÁî®ÊñπÊ≥ï" >> CHANGELOG.md
        echo "1. **Web„Ç¢„Éó„É™**: [GitHub Pages „Åß„Ç¢„ÇØ„Çª„Çπ](https://your-username.github.io/FPGApinPlaner/)" >> CHANGELOG.md
        echo "2. **„É≠„Éº„Ç´„É´ÂÆüË°å**: „ÉÄ„Ç¶„É≥„É≠„Éº„Éâ„Åó„Åü„Éï„Ç°„Ç§„É´„ÇíÂ±ïÈñã„Åó„ÄÅ\`npm install && npm run dev\`" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### üìã „Çµ„Éù„Éº„Éà„Éï„Ç©„Éº„Éû„ÉÉ„Éà" >> CHANGELOG.md
        echo "- **ÂÖ•Âäõ**: Xilinx CSV, Intel Quartus CSV" >> CHANGELOG.md
        echo "- **Âá∫Âäõ**: XDC (Xilinx), SDC, QSF (Intel)" >> CHANGELOG.md
        
    - name: üè∑Ô∏è Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: FPGA Pin Planner ${{ github.ref_name }}
        body_path: CHANGELOG.md
        files: |
          fpga-pin-planner-*.tar.gz
          fpga-pin-planner-*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
