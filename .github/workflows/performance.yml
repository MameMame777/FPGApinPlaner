name: Performance Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 0' # 毎週日曜日正午

jobs:
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build
      run: npm run build
      
    - name: 🚀 Start server
      run: |
        npx serve -s dist -p 3000 &
        sleep 5
      
    - name: 🔍 Run Lighthouse
      run: |
        npm install -g lighthouse
        lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json --chrome-flags="--headless --no-sandbox"
        lighthouse http://localhost:3000 --output=html --output-path=./lighthouse-report.html --chrome-flags="--headless --no-sandbox"
        
    - name: 📊 Upload Lighthouse reports
      uses: actions/upload-artifact@v4
      with:
        name: lighthouse-reports
        path: |
          lighthouse-report.json
          lighthouse-report.html
        retention-days: 7
        
    - name: 📝 Performance summary
      run: |
        echo "## ⚡ パフォーマンス監査結果" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Extract scores from Lighthouse JSON
        PERFORMANCE=$(cat lighthouse-report.json | grep -o '"performance":[0-9.]*' | cut -d':' -f2)
        ACCESSIBILITY=$(cat lighthouse-report.json | grep -o '"accessibility":[0-9.]*' | cut -d':' -f2)
        BEST_PRACTICES=$(cat lighthouse-report.json | grep -o '"best-practices":[0-9.]*' | cut -d':' -f2)
        SEO=$(cat lighthouse-report.json | grep -o '"seo":[0-9.]*' | cut -d':' -f2)
        
        echo "### 📊 Lighthouse スコア" >> $GITHUB_STEP_SUMMARY
        echo "- **Performance**: ${PERFORMANCE:-N/A}" >> $GITHUB_STEP_SUMMARY
        echo "- **Accessibility**: ${ACCESSIBILITY:-N/A}" >> $GITHUB_STEP_SUMMARY
        echo "- **Best Practices**: ${BEST_PRACTICES:-N/A}" >> $GITHUB_STEP_SUMMARY
        echo "- **SEO**: ${SEO:-N/A}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "詳細レポートは Artifacts からダウンロードできます。" >> $GITHUB_STEP_SUMMARY

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build and analyze
      run: |
        npm run build
        
        # Bundle size analysis
        echo "## 📦 バンドルサイズ分析" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 ファイルサイズ" >> $GITHUB_STEP_SUMMARY
        du -sh dist/* | sort -hr >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📈 総バンドルサイズ" >> $GITHUB_STEP_SUMMARY
        echo "$(du -sh dist | cut -f1)" >> $GITHUB_STEP_SUMMARY
