{
  "name": "fpga-pin-planner",
  "displayName": "FPGA Pin Planner",
  "description": "Advanced FPGA Pin Assignment and Management Tool with Voltage/IO Standard Selection",
  "version": "1.0.10",
  "publisher": "MameMame777",
  "author": "MameMame777 <mame@example.com>",
  "license": "MIT",
  "homepage": "https://github.com/MameMame777/FPGApinPlaner",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MameMame777/FPGApinPlaner.git"
  },
  "bugs": {
    "url": "https://github.com/MameMame777/FPGApinPlaner/issues"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Visualization",
    "Data Science"
  ],
  "keywords": [
    "fpga",
    "pin-assignment",
    "pin-planner",
    "xilinx",
    "intel-quartus",
    "voltage-io-standards",
    "differential-pairs",
    "constraint-validation",
    "hardware-design"
  ],
  "icon": "images/icon.png",
  "activationEvents": [
    "onCommand:fpgaPinPlanner.openPlanner",
    "onCommand:fpgaPinPlanner.loadSampleData",
    "onCustomEditor:fpgaPinPlanner.fpgaProjectEditor"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "fpgaPinPlanner.openPlanner",
        "title": "Open FPGA Pin Planner",
        "category": "FPGA",
        "icon": "$(circuit-board)"
      },
      {
        "command": "fpgaPinPlanner.loadSampleData",
        "title": "Load Sample Data",
        "category": "FPGA",
        "icon": "$(beaker)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "fpgaPinPlanner.openPlanner"
        },
        {
          "command": "fpgaPinPlanner.loadSampleData"
        }
      ]
    },
    "customEditors": [
      {
        "viewType": "fpgaPinPlanner.fpgaProjectEditor",
        "displayName": "FPGA Pin Planner",
        "selector": [
          {
            "filenamePattern": "*.fpgaproj"
          }
        ],
        "priority": "default"
      }
    ],
    "webviews": [
      {
        "viewType": "fpgaPinPlanner.mainView",
        "displayName": "FPGA Pin Planner"
      }
    ],
    "configuration": {
      "title": "FPGA Pin Planner",
      "properties": {
        "fpgaPinPlanner.defaultVoltage": {
          "type": "string",
          "default": "3.3V",
          "enum": [
            "1.0V",
            "1.2V",
            "1.5V",
            "1.8V",
            "2.5V",
            "3.3V",
            "5.0V"
          ],
          "description": "Default voltage level for new pins"
        },
        "fpgaPinPlanner.defaultIOStandard": {
          "type": "string",
          "default": "AUTO",
          "description": "Default I/O standard for new pins"
        },
        "fpgaPinPlanner.autoSave": {
          "type": "boolean",
          "default": true,
          "description": "Automatically save changes"
        },
        "fpgaPinPlanner.validationLevel": {
          "type": "string",
          "default": "strict",
          "enum": [
            "strict",
            "moderate",
            "relaxed"
          ],
          "description": "Validation strictness level"
        },
        "fpgaPinPlanner.exportFormat": {
          "type": "string",
          "default": "xdc",
          "enum": [
            "xdc",
            "sdc",
            "qsf"
          ],
          "description": "Default export format"
        }
      }
    },
    "languages": [
      {
        "id": "fpga-constraints",
        "aliases": [
          "XDC",
          "SDC",
          "QSF"
        ],
        "extensions": [
          ".xdc",
          ".sdc",
          ".qsf"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "fpga-constraints",
        "scopeName": "source.fpga-constraints",
        "path": "./syntaxes/fpga-constraints.tmGrammar.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run copy-webview && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "clean": "rimraf out webview-dist",
    "copy-webview": "rimraf webview-dist && mkdir webview-dist && node -e \"require('fs').cpSync('../dist', 'webview-dist', {recursive: true})\"",
    "build": "npm run clean && npm run copy-webview && npm run compile",
    "package": "npm run build && vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/node": "^16.18.126",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "@vscode/test-electron": "^2.2.0",
    "eslint": "^8.57.1",
    "rimraf": "^3.0.2",
    "typescript": "^4.9.5",
    "vsce": "^2.15.0"
  },
  "dependencies": {
    "csv-parser": "^3.0.0",
    "csv-stringify": "^6.2.3"
  },
  "type": "commonjs"
}
